<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

  <bean id="dataSourceForActiviti" class="com.alibaba.druid.pool.DruidDataSource"
        init-method="init" destroy-method="close">
    <property name="driverClassName" value="${activiti.driver}" />
    <property name="url" value="${activiti.url}" />
    <property name="username" value="${activiti.user}" />
    <property name="password" value="${activiti.password}" />
    <!-- 配置初始化大小、最小、最大 -->
    <property name="initialSize" value="${activiti.initialSize}" />
    <property name="minIdle" value="${activiti.minIdle}" />
    <property name="maxActive" value="${activiti.maxActive}" />
    <!-- 配置获取连接等待超时的时间 -->
    <property name="maxWait" value="${activiti.maxWait}" />
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="${activiti.timeBetweenEvictionRunsMillis}" />
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="${activiti.minEvictableIdleTimeMillis}" />
    <property name="testWhileIdle" value="${activiti.testWhileIdle}" />
    <!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
    <property name="testOnBorrow" value="${activiti.testOnBorrow}" />
    <property name="testOnReturn" value="${activiti.testOnReturn}" />
    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
    <property name="poolPreparedStatements" value="${activiti.poolPreparedStatements}" />
    <property name="maxPoolPreparedStatementPerConnectionSize" value="${activiti.maxPoolPreparedStatementPerConnectionSize}" />
    <!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
    <property name="defaultAutoCommit" value="${activiti.defaultAutoCommit}" />
    <!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
    <!--<property name="validationQuery" value="select 1 " />-->
    <!--<property name="filters" value="stat" />-->
    <!--<property name="proxyFilters">-->
    <!--<list>-->
    <!--<ref bean="logFilter" />-->
    <!--</list>-->
    <!--</property>-->
  </bean>

  <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
    <!-- 数据源 -->
    <property name="dataSource" ref="dataSourceForActiviti"/>
    <!-- 配置事务管理器，统一事务 -->
    <property name="transactionManager" ref="transactionManager"/>
    <!-- 设置建表策略，如果没有表，自动创建表 -->
    <property name="databaseSchemaUpdate" value="true"/>

    <property name="jobExecutorActivate" value="false"/>
    <!-- 生成流程图的字体   解决图片中文不显示问题-->
    <property name="activityFontName" value="宋体"/>
    <property name="labelFontName" value="宋体"/>
    <!--<property name="deploymentResources" value="classpath*:/diagrams/**/*.xml"/>-->
  </bean>

  <!-- 创建流程引擎对象 -->
  <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
    <property name="processEngineConfiguration" ref="processEngineConfiguration"/>
  </bean>
  <!--
	相当于下面的代码
	RepositoryServicie repositoryService = processEngine.getRepositoryService();
	RuntimeServicie repositoryService = processEngine.getRuntimeServicie();
	TaskServicie taskServicie = processEngine.getTaskServicie();
	HistoryServicie historyServicie = processEngine.getHistoryServicie(); -->
  <!-- 由流程引擎对象，提供的方法，创建项目中使用的Activiti工作流的Service -->
  <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
  <bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
  <bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
  <bean id="formService" factory-bean="processEngine" factory-method="getFormService" />
  <bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService" />
  <bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
  <bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>
</beans>